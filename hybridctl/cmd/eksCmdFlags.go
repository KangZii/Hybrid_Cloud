package cmd

func eksFlags() {
	associateEncryptionConfigCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster to associate the configuration to.")
	associateEncryptionConfigCmd.MarkFlagRequired("cluster-name")
	associateEncryptionConfigCmd.Flags().StringP("encryption-config", "", "", "enter your encryption-config Jsonfile name")
	associateEncryptionConfigCmd.MarkFlagRequired("encryption-config")
	associateEncryptionConfigCmd.Flags().StringP("client-request-token", "", "", "enter client request token")

	associateIdentityProviderConfigCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster to associate the configuration to.")
	associateIdentityProviderConfigCmd.MarkFlagRequired("cluster-name")
	associateIdentityProviderConfigCmd.Flags().StringP("oidc", "", "", "An object that represents an OpenID Connect (OIDC) identity provider configuration.")
	associateIdentityProviderConfigCmd.MarkFlagRequired("oidc")
	associateIdentityProviderConfigCmd.Flags().StringP("client-request-token", "", "", "enter client request token")
	associateIdentityProviderConfigCmd.Flags().StringP("tags", "", "", "enter your tags Jsonfile name")

	EKSCreateAddonCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster to create the add-on for.")
	EKSCreateAddonCmd.MarkFlagRequired("cluster-name")
	EKSCreateAddonCmd.Flags().StringP("addon-name", "a", "", "The name of the add-on. The name must match one of the names returned by ` ListAddons")
	EKSCreateAddonCmd.MarkFlagRequired("addon-name")
	EKSCreateAddonCmd.Flags().StringP("addon-version", "", "", "The version of the add-on. The version must match one of the versions returned")
	EKSCreateAddonCmd.Flags().StringP("service-account-role-arn", "", "", "The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account.")
	EKSCreateAddonCmd.Flags().StringP("resolve-conflicts", "", "", "How to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on.")
	EKSCreateAddonCmd.Flags().StringP("client-request-token", "", "", "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.")
	EKSCreateAddonCmd.Flags().StringP("tags", "", "", "The metadata to apply to the cluster to assist with categorization and organization.")

	EKSDeleteAddonCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster.")
	EKSDeleteAddonCmd.MarkFlagRequired("cluster-name")
	EKSDeleteAddonCmd.Flags().StringP("addon-name", "a", "", "The name of the add-on. The name must match one of the names returned by ` ListAddons")
	EKSDeleteAddonCmd.MarkFlagRequired("addon-name")

	EKSDescribeAddonCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster.")
	EKSDescribeAddonCmd.MarkFlagRequired("cluster-name")
	EKSDescribeAddonCmd.Flags().StringP("addon-name", "a", "", "The name of the add-on. The name must match one of the names returned by ` ListAddons")
	EKSDescribeAddonCmd.MarkFlagRequired("addon-name")

	EKSDescribeAddonVersionsCmd.Flags().StringP("addon-name", "a", "", "The name of the add-on. The name must match one of the names returned by ` ListAddons")
	EKSDescribeAddonVersionsCmd.MarkFlagRequired("addon-name")
	EKSDescribeAddonVersionsCmd.Flags().StringP("kubernetes-version", "", "", "The Kubernetes versions that the add-on can be used with.")
	EKSDescribeAddonVersionsCmd.Flags().Int64P("max-result", "", 0, "The maximum number of results to return.")
	EKSDescribeAddonVersionsCmd.Flags().StringP("next-token", "", "", "This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.")

	describeUpdateCmd.Flags().StringP("name", "c", "", "The name of the Amazon EKS cluster associated with the update.")
	describeUpdateCmd.MarkFlagRequired("name")
	describeUpdateCmd.Flags().StringP("update-id", "", "", "")
	describeUpdateCmd.MarkFlagRequired("update-id")
	describeUpdateCmd.Flags().StringP("nodegroup-name", "", "", "enter nodegroupName")
	describeUpdateCmd.Flags().StringP("addon-name", "", "", "enter addonName")

	disassociateIdentityProviderConfigCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster to disassociate an identity provider from.")
	disassociateIdentityProviderConfigCmd.MarkFlagRequired("cluster-name")
	disassociateIdentityProviderConfigCmd.Flags().StringP("identity-provider-config", "", "", "enter your Jsonfile name")
	disassociateIdentityProviderConfigCmd.MarkFlagRequired("identity-provider-config")
	disassociateIdentityProviderConfigCmd.Flags().StringP("client-request-token", "", "", "enter client request token")

	EKSListAddonCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster.")
	EKSListAddonCmd.MarkFlagRequired("cluster-name")
	EKSListAddonCmd.Flags().Int64P("max-result", "", 0, "The maximum number of add-on results returned by ListAddonsRequest in paginated")
	EKSListAddonCmd.Flags().StringP("next-token", "", "", "The nextToken value returned from a previous paginated ListAddonsRequest")

	listIdentityProviderConfigsCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster.")
	listIdentityProviderConfigsCmd.MarkFlagRequired("cluster-name")
	listIdentityProviderConfigsCmd.Flags().Int64P("max-result", "", 0, "enter maxresult")
	listIdentityProviderConfigsCmd.Flags().StringP("next-token", "", "", "enter next token")

	describeIdentityProviderConfigCmd.Flags().StringP("cluster-name", "c", "", "The cluster name that the identity provider configuration is associated to.")
	describeIdentityProviderConfigCmd.MarkFlagRequired("cluster-name")
	describeIdentityProviderConfigCmd.Flags().StringP("identity-provider-config", "", "", "An object that represents an identity provider configuration.")
	describeIdentityProviderConfigCmd.MarkFlagRequired("identity-provider-config")

	listTagsForResourceCmd.Flags().StringP("resource-arn", "", "", "Enter resource-arn")

	listUpdateCmd.Flags().StringP("name", "c", "", "The name of the Amazon EKS cluster associated with the update.")
	listUpdateCmd.MarkFlagRequired("name")
	listUpdateCmd.Flags().StringP("nodegroup-name", "", "", "enter nodegroupName")
	listUpdateCmd.Flags().StringP("addon-name", "", "", "enter addonName")
	listUpdateCmd.Flags().Int64P("max-result", "", 0, "enter maxresult")
	listUpdateCmd.Flags().StringP("next-token", "", "", "enter next token")

	tagResourceCmd.Flags().StringP("tags", "t", "", "enter your tags Jsonfile name")
	tagResourceCmd.MarkPersistentFlagRequired("tags")
	tagResourceCmd.Flags().StringP("resource-arn", "", "", "Enter resource-arn")
	tagResourceCmd.MarkPersistentFlagRequired("resource-arn")

	untagResourceCmd.Flags().StringP("resource-arn", "", "", "Enter resource-arn")
	untagResourceCmd.Flags().StringP("tag-keys", "t", "", "enter your tag-keys list")
	untagResourceCmd.MarkPersistentFlagRequired("tag-keys")
	untagResourceCmd.MarkPersistentFlagRequired("resource-arn")

	EKSUpdateAddonCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster.")
	EKSUpdateAddonCmd.MarkFlagRequired("cluster-name")
	EKSUpdateAddonCmd.Flags().StringP("addon-name", "a", "", "The name of the add-on. The name must match one of the names returned by ` ListAddons")
	EKSUpdateAddonCmd.MarkFlagRequired("addon-name")
	EKSUpdateAddonCmd.Flags().StringP("addon-version", "", "", "enter addon version")
	EKSUpdateAddonCmd.Flags().StringP("service-account-role-arn", "", "", "enter service account rolearn")
	EKSUpdateAddonCmd.Flags().StringP("resolve-conflicts", "", "", "enter addon version")
	EKSUpdateAddonCmd.Flags().StringP("client-request-token", "", "", "enter client request token")

	updateClusterConfigCmd.Flags().StringP("name", "c", "", "The name of the Amazon EKS cluster associated with the update.")
	updateClusterConfigCmd.MarkFlagRequired("name")
	updateClusterConfigCmd.Flags().StringP("resource-vpc-config", "", "", "enter resource-vpc-config jsonfile name")
	updateClusterConfigCmd.Flags().StringP("logging", "", "", "enter logging jsonfile name")
	updateClusterConfigCmd.Flags().StringP("client-request-token", "", "", "enter client request token")

	updateNodegroupConfigCmd.Flags().StringP("cluster-name", "c", "", "The name of the cluster.")
	updateNodegroupConfigCmd.MarkFlagRequired("cluster-name")
	updateNodegroupConfigCmd.Flags().StringP("nodegroup-name", "", "", "enter nodegroupName")
	updateNodegroupConfigCmd.MarkFlagRequired("nodegroup-name")
	updateNodegroupConfigCmd.Flags().StringP("labels", "", "", "enter labels jsonfile name")
	updateNodegroupConfigCmd.Flags().StringP("taints", "", "", "enter taints jsonfile name")
	updateNodegroupConfigCmd.Flags().StringP("scaling-config", "", "", "enter resource-vpc-config jsonfile name")
	updateNodegroupConfigCmd.Flags().StringP("update-config", "", "", "enter logging jsonfile name")
	updateNodegroupConfigCmd.Flags().StringP("client-request-token", "", "", "enter client request token")

}
